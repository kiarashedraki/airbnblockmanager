/**
 * To create an application that can be deployed in a container
 * Read this : https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto-create-a-deployable-war-file
 */

buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.springframework.boot'



bootJar {
    baseName = 'gs-rest-me.edraki.service'
    version = '0.1.0'
}

repositories {
    mavenCentral()
}

configurations {
    dev
}

springBoot {
    mainClassName = 'me.edraki.Application'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//https://docs.spring.io/spring-boot/docs/2.0.5.RELEASE/gradle-plugin/reference/html/#getting-started
dependencies {
    dev("org.springframework.boot:spring-boot-devtools")
    compile("org.mongodb:mongo-java-driver")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('com.jayway.jsonpath:json-path')
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
}

// This is to have a continues development
bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}